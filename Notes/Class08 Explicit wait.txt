Selenium Class 8

Synchronization

Implicit wait:
    It will be applied for findElement method

Explicit wait or WebDriver Wait:
    It is used to tell the WebDriver to wait for certain condition and certain amount of time before
throwing an exception for specified condition only
Explicit wait works with ExpectedConditions class and it waits until certain conditions are met or the given time is achieved
That means when the given time is achieved and the condition is not met, then we have an exception - test is going to fail

To specify explicit wait:
    1. create an object of the WebDriver wait
    - in the constructor you need to mention 2 things:
      1) time (seconds) - when do you want the wait to stop waiting and throw an exception. Usual time for any wait is 20 sec
      2) object - what are you using to perform an action; what is the object that you use to perform actions on the web page(driver)
    Example:  WebDriverWait wait=new WebDriverWait(driver,20);

    2. specify the conditions:
        1) use .until() method
        2) specify the conditions inside the constructor
      In this example we're waiting until the element is visible to us on the page
    Example: wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//p[contains(text(), 'First Name')]")));

Fluent wait:
    Fluent wait is considered to be a global wait (applied to the whole script) as well
    It is used to tell the WebDriver to wait for certain condition as well as its frequency before throwing an exception

Implicit wait - waits to locate the element
Explicit wait - waits until certain condition
Fluent wait - sets timeouts, polling time and ignores needed exceptions in the given time period

WebTables:
WebTables are elements on the webpage, which are constructed by having rows and columns.
WebTables consist of different sections and parts:
there are 2 main sections:
    - header - the heading, all headers
    - body - all the data

Structure od a table
<table>
    <thead>
        <tr>
            <th></th> --column data or heading
        </tr>
    </thead>
    <tbody>
        <tr>
            <td></td> --table data
        </tr>
</table>

** sometimes heading is included in the table body

Types of WebTables:
1. Static WebTable - data doesn't change
2. Dynamic WebTable - data changes
